#include "DancingLink.h"
#include "Util.h"
#include <algorithm>
#include <assert.h>
#include <cstring>
#include <iostream>
using namespace std;

struct Test {
  int s[MAX][MAX];
  int n;
  int m;
  vector<int> cover;
} test_cases[] = {
    {
        {
            {}, {0, 1}, // 1
        },
        1,
        1,
        {0, 1},
    },
    {
        {
            //  1           5
            {},
            {0, 0, 0, 1, 0, 1, 1, 0}, // 1
            {0, 1, 0, 0, 1, 0, 0, 1},
            {0, 0, 1, 1, 0, 0, 1, 0},
            {0, 1, 0, 0, 1, 0, 0, 0},
            {0, 0, 1, 0, 0, 0, 0, 1}, // 5
            {0, 0, 0, 0, 1, 1, 0, 1},
        },
        6,
        7,
        {0, 1, 0, 0, 1, 1, 0},
    },
    {
        {
            //  1           5
            {},
            {0, 1, 0, 0, 1, 0, 0, 1}, // 1
            {0, 1, 0, 0, 1, 0, 0, 0},
            {0, 0, 0, 0, 1, 1, 0, 1},
            {0, 0, 0, 1, 0, 1, 1, 0},
            {0, 0, 1, 1, 0, 0, 1, 1}, // 5
            {0, 0, 1, 0, 0, 0, 0, 1},
        },
        6,
        7,
        {0, 0, 1, 0, 1, 0, 1},
    },
    {
        {
            //  1           5
            {},
            {0, 0, 0, 1, 0, 1, 1, 0}, // 1
            {0, 1, 0, 0, 1, 0, 0, 1},
            {0, 0, 1, 1, 0, 0, 1, 0},
            {0, 1, 0, 0, 1, 0, 0, 0},
            {0, 0, 1, 0, 0, 0, 0, 1}, // 5
            {0, 0, 0, 0, 0, 1, 0, 1},
        },
        6,
        7,
        {0, 0, 0, 1, 1, 0, 1},
    },
    {
        {
            //  1
            {},
            {0, 1, 0, 0, 1}, // 1
            {0, 0, 1, 0, 0},
            {0, 0, 0, 1, 1},
            {0, 1, 0, 1, 1},
            {0, 0, 1, 0, 1}, // 5
        },
        5,
        4,
        {0, 0, 1, 0, 1, 0},
    },
    {
        {
            //  1           5              10
            {},
            {0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1}, // 1
            {0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0},
            {0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0},
            {0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0}, // 5
            {0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0},
            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
            {0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
        },
        8,
        11,
        {0, 1, 1, 1, 0, 1, 0, 0, 1},
    },
};

int main(void) {
  for (int i = 0; i < sizeof(test_cases) / sizeof(Test); i++) {
    Test &t = test_cases[i];
    pair<bool, vector<int>> result = DancingLink(t.n, t.m, t.s);
    bool success = result.first;
    vector<int> &cover = result.second;
    assert(success);
    assert(cover == t.cover);
  }
  return 0;
}

